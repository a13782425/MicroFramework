name: Publish packages to GitHub Packages

on:
  push:
    branches:
      - main
    paths:
      - 'packages/com.timeslip.microframework.core/package.json' # 只监控 package.json 文件的变化
      - 'packages/com.timeslip.microframework.bindable/package.json'
  workflow_dispatch:
    inputs:
      package_name:
        description: '要发布的包名'
        required: true
        default: 'com.timeslip.microframework.core'
concurrency:
  group: "publish-packages" # 如果有新的工作流实例触发，取消正在进行中的同组实例
  cancel-in-progress: true
jobs:
  detect-changed-packages:
    runs-on: ubuntu-latest
    outputs:
      changed_packages: ${{ steps.set-outputs.outputs.changed_packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - id: set-outputs
        env:
          EVENT_NAME: ${{ github.event_name }}
          PACKAGE_NAME: ${{ github.event.inputs.package_name }}
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.sha }}
        run: |
          BUNDLES=(
            "com.timeslip.microframework.core:packages/com.timeslip.microframework.core/"
            "com.timeslip.microframework.bindable:packages/com.timeslip.microframework.bindable/"
          )

          CHANGED=()

          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            for pair in "${BUNDLES[@]}"; do
              NAME="${pair%%:*}"
              PATH="${pair##*:}"
              if [ "$PACKAGE_NAME" = "$NAME" ]; then
                CHANGED+=("{\"name\":\"$NAME\",\"path\":\"$PATH\"}")
              fi
            done
          else
            # 检查before是否合法，否则fallback到HEAD~1..HEAD
            if git rev-parse --quiet --verify "$BEFORE" >/dev/null; then
              DIFF_FILES=$(git diff --name-only "$BEFORE" "$AFTER")
            else
              DIFF_FILES=$(git diff --name-only HEAD~1 HEAD)
            fi

            for pair in "${BUNDLES[@]}"; do
              NAME="${pair%%:*}"
              PATH="${pair##*:}"
              PACKAGE_JSON="${PATH}package.json"
              for file in $DIFF_FILES; do
                if [ "$file" = "$PACKAGE_JSON" ]; then
                  CHANGED+=("{\"name\":\"$NAME\",\"path\":\"$PATH\"}")
                fi
              done
            done
          fi

          # 输出
          if [ ${#CHANGED[@]} -gt 0 ]; then
            echo "changed_packages=[$(IFS=,; echo "${CHANGED[*]}")]" >> $GITHUB_OUTPUT
          else
            echo "changed_packages=[]" >> $GITHUB_OUTPUT
          fi

  build-and-publish:
    needs: detect-changed-packages
    if: needs.detect-changed-packages.outputs.changed_packages != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect-changed-packages.outputs.changed_packages) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com/'

      - run: npm install --only=prod

      - name: Create .npmrc file
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
          echo "@a13782425:registry=https://npm.pkg.github.com/" >> ~/.npmrc

      - name: Build and publish ${{ matrix.package.name }}
        run: |
          cd ${{ matrix.package.path }}
          npm config set registry https://npm.pkg.github.com/
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

